{"version":3,"file":"chunk-OSN4JR34-6ebfbf9a.js","sources":["../../node_modules/.pnpm/@chakra-ui+react-use-merge-refs@2.1.0_react@18.2.0/node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs","../../node_modules/.pnpm/@chakra-ui+form-control@2.1.1_fkfdxyqpisjqdahr2zti2zrl3q/node_modules/@chakra-ui/form-control/dist/chunk-OSN4JR34.mjs"],"sourcesContent":["'use client'\n\n// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n//# sourceMappingURL=index.mjs.map","'use client'\n\n// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n//# sourceMappingURL=chunk-OSN4JR34.mjs.map"],"names":["assignRef","ref","value","mergeRefs","refs","node","useMergeRefs","useMemo","FormControlStylesProvider","useFormControlStyles","createContext","FormControlProvider","useFormControlContext","useFormControlProvider","props","idProp","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","id","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","useState","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","getLabelProps","dataAttr","getErrorMessageProps","getRootProps","getRequiredIndicatorProps","FormControl","forwardRef","styles","useMultiStyleConfig","ownProps","omitThemingProps","_","context","className","cx","jsx","chakra","FormHelperText","field"],"mappings":"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","x_google_ignoreList":[0,1]}